
# # Set up database connection details
# db_user = os.environ.get('DB_USER')
# db_password = os.environ.get('DB_PASSWORD')
# db_name = os.environ.get('DB_NAME')
# db_host = os.environ.get('DB_HOST')
# db_port = os.environ.get('DB_PORT')

# # Create PyMySQL connection
# conn = pymysql.connect(
#     user=db_user,
#     password=db_password,
#     host=db_host,
#     port=int(db_port),
#     database=db_name,
# )

# # Create SQLAlchemy engine
# engine = create_engine(f'mysql+pymysql://{db_user}:{db_password}@{db_host}:{db_port}/{db_name}', echo=True)



@app.route('/packages', methods=['POST'])
def packages_list():
    # Parse request body
    package_queries = request.json

    for query in package_queries:
        if 'Name' not in query:
            return jsonify({'error': "There is missing field(s) in the PackageQuery/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."}), 400
    
    # Check for pagination offset
    offset = request.args.get('offset', 0)

    print("offset ", offset)
        
    # Mock database query
    results = []

    for package in PACKAGES:
        for query in package_queries:
            print(query)
            if query == '*' or query == package['Name']:
                results.append(package)
    
    # Apply pagination
    paginated_results = results[int(offset):int(offset)+10]  # limit to 10 results per page
    
    # Generate response
    response = jsonify(paginated_results)
    response.headers.add('offset', str(int(offset)+10))  # set next page offset in response header
    
    return response, 200
